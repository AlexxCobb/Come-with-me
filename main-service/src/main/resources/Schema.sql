drop table IF EXISTS users, categories, events, requests, compilations, compilation_events;

create table if not exists users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  email VARCHAR(254) NOT NULL,
  name VARCHAR(250) NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

create table if not exists categories (
  id int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(50) NOT NULL,
  CONSTRAINT pk_category PRIMARY KEY (id),
  CONSTRAINT UQ_CATEGORY_NAME UNIQUE (name)
);

/*create table if not exists locations (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  latitude FLOAT NOT NULL,
  longitude FLOAT NOT NULL,
  CONSTRAINT pk_location PRIMARY KEY (id)
);*/

create table if not exists events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  annotation VARCHAR(2000) NOT NULL,
  category_id INT NOT NULL,
  confirmed_requests INT NOT NULL,
  created_date timestamp WITHOUT TIME ZONE NOT NULL,
  description VARCHAR(7000) NOT NULL,
  event_date timestamp WITHOUT TIME ZONE NOT NULL,
  initiator_id BIGINT NOT NULL,
  latitude FLOAT NOT NULL,
  longitude FLOAT NOT NULL,
  is_paid BOOLEAN NOT NULL,
  participant_limit INT NOT NULL,
  published_date timestamp WITHOUT TIME ZONE,
  is_need_moderate BOOLEAN NOT NULL,
  state VARCHAR(20) NOT NULL,
  title VARCHAR(120) NOT NULL,
  views INT,
  CONSTRAINT pk_event PRIMARY KEY (id),
  CONSTRAINT events_users_fk FOREIGN KEY (initiator_id) REFERENCES users(id),
  CONSTRAINT events_categories_fk FOREIGN KEY (category_id) REFERENCES categories(id)
);

create table if not exists requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created_date timestamp WITHOUT TIME ZONE NOT NULL,
  event_id BIGINT NOT NULL,
  requester_id BIGINT NOT NULL,
  status VARCHAR(20) NOT NULL,
  CONSTRAINT pk_request PRIMARY KEY (id),
  CONSTRAINT requests_users_fk FOREIGN KEY (requester_id) REFERENCES users(id),
  CONSTRAINT requests_events_fk FOREIGN KEY (event_id) REFERENCES events(id)
);

create table if not exists compilations (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  title VARCHAR(50) NOT NULL,
  is_pinned BOOLEAN NOT NULL,
  CONSTRAINT pk_compilation PRIMARY KEY (id),
  CONSTRAINT UQ_COMPILATION_TITLE UNIQUE (title)
);

create table if not exists compilation_events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  event_id BIGINT NOT NULL,
  compilation_id BIGINT NOT NULL,
  CONSTRAINT pk_compilation_event PRIMARY KEY (id),
  CONSTRAINT compilations_events_compilations_fk FOREIGN KEY (compilation_id) REFERENCES compilations(id),
  CONSTRAINT compilation_events_events_fk FOREIGN KEY (event_id) REFERENCES events(id)
);